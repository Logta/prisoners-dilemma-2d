# =============================================================================
# 2D Prisoner's Dilemma - mise configuration
# =============================================================================

[tools]
node = "24"
rust = "latest"
bun = "latest"

[env]
RUST_LOG = "debug"

# =============================================================================
# 🚀 DAILY COMMANDS - よく使うコマンド
# =============================================================================

[tasks.dev]
description = "🚀 開発開始"
run = [
  "cd wasm && wasm-pack build --target web --out-dir pkg",
  "mkdir -p web/src/assets/pkg && cp -r wasm/pkg/* web/src/assets/pkg/",
  "cd web && bun run dev"
]

[tasks.test]
description = "🧪 テスト実行"
run = [
  "cd wasm && cargo test",
  "cd web && bun test"
]

[tasks.check]
description = "✅ 品質チェック"
run = [
  "cd wasm && cargo clippy",
  "cd web && bun run biome:check",
  "cd web && bun run type-check"
]

[tasks.fmt]
description = "🎨 コード整形"
run = [
  "cd wasm && cargo fmt",
  "cd web && bun run biome:fix"
]

# =============================================================================
# 🔨 BUILD COMMANDS - ビルド関連
# =============================================================================

[tasks.wasm]
description = "🦀 WASMビルド"
run = "cd wasm && wasm-pack build --target web --out-dir pkg"

[tasks.copy]
description = "📂 ファイルコピー"
run = [
  "mkdir -p web/src/assets/pkg",
  "cp -r wasm/pkg/* web/src/assets/pkg/"
]
depends = ["wasm"]

[tasks.build]
description = "🏗️ 本番ビルド"
run = [
  "cd wasm && wasm-pack build --target web --out-dir pkg",
  "mkdir -p web/src/assets/pkg && cp -r wasm/pkg/* web/src/assets/pkg/",
  "cd web && bun run build"
]

[tasks.preview]
description = "👀 本番プレビュー"
run = [
  "cd wasm && wasm-pack build --target web --out-dir pkg",
  "mkdir -p web/src/assets/pkg && cp -r wasm/pkg/* web/src/assets/pkg/",
  "cd web && bun run build",
  "cd web && bun run preview"
]

# =============================================================================
# 📊 WATCH COMMANDS - 監視系
# =============================================================================

[tasks.watch]
description = "👀 テスト監視"
run = "cd wasm && cargo watch -x test"

[tasks.watch-wasm]
description = "🔄 WASM監視"
run = "cd wasm && cargo watch -s 'wasm-pack build --target web --out-dir pkg && mkdir -p ../web/src/assets/pkg && cp -r pkg/* ../web/src/assets/pkg/'"

# =============================================================================
# 🛠️ SETUP COMMANDS - セットアップ
# =============================================================================

[tasks.setup]
description = "🛠️ 初期セットアップ"
run = [
  "cargo install wasm-pack",
  "cargo install cargo-watch",
  "cd web && bun install"
]

[tasks.install]
description = "📦 依存関係インストール"
run = "cd web && bun install"

[tasks.clean]
description = "🧹 クリーンアップ"
run = [
  "rm -rf pkg/ web/src/assets/pkg/ web/build/ target/",
  "echo 'クリーンアップ完了'"
]

# =============================================================================
# 📚 UTILITY COMMANDS - その他
# =============================================================================

[tasks.docs]
description = "📚 ドキュメント生成"
run = "cargo doc --no-deps --open"

[tasks.size]
description = "📊 サイズ確認"
run = [
  "cd wasm && wasm-pack build --target web --out-dir pkg",
  "mkdir -p web/src/assets/pkg && cp -r wasm/pkg/* web/src/assets/pkg/",
  "cd web && bun run build",
  "ls -lh wasm/pkg/*.wasm",
  "ls -lh web/build/assets/*.js"
]

[tasks.lint]
description = "🔍 詳細リント"
run = [
  "cd wasm && cargo clippy -- -D warnings",
  "cd web && bun run biome:check",
  "cd web && bun run type-check"
]

[tasks.type-check]
description = "🏷️ 型チェック"
run = "cd web && bun run type-check"

[tasks.ci]
description = "🚦 CI チェック (テスト + 品質チェック)"
run = [
  "mise run test",
  "mise run check"
]

[tasks.full-check]
description = "🔍 完全チェック (フォーマット + 品質チェック + テスト)"
run = [
  "mise run fmt",
  "mise run check",
  "mise run test"
]

# =============================================================================
# 🎯 SHORTCUT COMMANDS - ショートカット
# =============================================================================

[tasks.d]
description = "🚀 開発開始 (短縮)"
run = "mise run dev"

[tasks.t]
description = "🧪 テスト実行 (短縮)"
run = "mise run test"

[tasks.c]
description = "✅ 品質チェック (短縮)"
run = "mise run check"

[tasks.f]
description = "🎨 コード整形 (短縮)"
run = "mise run fmt"

[tasks.tc]
description = "🏷️ 型チェック (短縮)"
run = "mise run type-check"

[tasks.ci-short]
description = "🚦 CI チェック (短縮)"
run = "mise run ci"

[tasks.fc]
description = "🔍 完全チェック (短縮)"
run = "mise run full-check"

[tasks.w]
description = "👀 テスト監視 (短縮)"
run = "mise run watch"

[tasks.b]
description = "🏗️ 本番ビルド (短縮)"
run = [
  "cd wasm && wasm-pack build --target web --out-dir pkg",
  "mkdir -p web/src/assets/pkg && cp -r wasm/pkg/* web/src/assets/pkg/",
  "cd web && bun run build"
]